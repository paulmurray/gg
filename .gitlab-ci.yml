# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

.base-rules:
  rules:
    - changes: 
        paths:
          - "$PROJECT_DIR/**/*"
          - "ci/**/*"

.base-npm:
  needs: []
  cache:
    key:
      files:
        - $PROJECT_DIR/package-lock.json
    paths:
      - $PROJECT_DIR/.npm/
      - $PROJECT_DIR/node_modules
  before_script:
    - if ! command -v node &> /dev/null; then apk add nodejs npm; fi
    - cd $PROJECT_DIR
    - !reference [.npm-install-if-not-already-in-cache, script]
  retry: 1
  interruptible: true
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

.unit-tests-template:
  image: node:latest
  extends: [.base-npm, .base-rules]
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  cache:
    paths:
      - $PROJECT_DIR/coverage/
  script:
    - npm run test
  artifacts:
    when: always
    paths:
      - $PROJECT_DIR/coverage/
    reports:
      junit:
        - $PROJECT_DIR/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: $PROJECT_DIR/coverage/cobertura-coverage.xml


.npm-install-if-not-already-in-cache:
  script:
    - npm ci
    # - test -d node_modules && echo "node_modules already populated from cache" || npm ci --cache .npm --prefer-offline

unit-tests-prod:
  extends: .unit-tests-template
  rules:
    - if: $DEPLOY_ENV == "prod"
      when: always

unit-tests-dev:
  extends: .unit-tests-template
  rules:
    - if: $DEPLOY_ENV != "prod"
      when: always